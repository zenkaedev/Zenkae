/* ===== Checklist (escopo do widget) ===== */
.hair-checklist{
  /* CORES / VARS */
  --text: #ffffff;
  --check: #ffffff;                 /* cor do “V” */
  --spark: #ffffff;                 /* cor das faíscas */
  --strike-idle: rgba(255, 255, 255, 0.35);   /* cor do risco quando NÃO marcado */
  --strike-checked: var(--check);   /* cor do risco quando marcado */

  /* CARD */
  --bg-card: linear-gradient(135deg, #BE7B2C 0%, #C8A563 100%);
  --card-pad: 30px;
  --radius: 16px;

  /* CHECKBOX */
  --cb-size: 22px;
  --tick-short: calc(var(--cb-size) * 0.38); /* haste curta do “V” */
  --tick-long:  calc(var(--cb-size) * 0.60); /* haste longa do “V” */

  display: grid;
  gap: 14px;
  font-size: 1rem; /* herda fonte do tema */
}

/* CARD (label cobre tudo para aumentar área clicável) */
.hair-checklist .item > label.box{
  display: flex;
  align-items: flex-start;
  gap: 14px;
  padding: var(--card-pad);
  background: var(--bg-card);
  border-radius: var(--radius);
  box-shadow: 0 10px 30px rgba(0,0,0,.08);
  position: relative;            /* ref. para faíscas */
  cursor: pointer;
  user-select: none;
  line-height: 1.35;
}

/* Checkbox custom */
.hair-checklist .box input[type="checkbox"]{
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: var(--cb-size);
  height: var(--cb-size);
  border-radius: 6px;
  border: 2px solid rgba(255,255,255,.9);
  background: rgba(255,255,255,.18);
  box-shadow: inset 0 1px 0 rgba(255,255,255,.35);
  position: relative;            /* base do “V” */
  flex: 0 0 var(--cb-size);
  margin: 0;
  transition: transform .12s ease, background-color .2s ease, border-color .2s ease;
}
.hair-checklist .box input[type="checkbox"]:active{ transform: scale(.96); }

/* “V” CENTRALIZADO (duas hastes animadas) */
.hair-checklist .box input[type="checkbox"]::before,
.hair-checklist .box input[type="checkbox"]::after{
  content:"";
  position:absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(0deg);
  width: 0;                      /* cresce na animação */
  height: 2px;
  background: var(--check);
  border-radius: 2px;
}
.hair-checklist .box input[type="checkbox"]:checked::before{ animation: hc-check-01 .35s ease forwards; }
.hair-checklist .box input[type="checkbox"]:checked::after{  animation: hc-check-02 .35s ease forwards; }

/* estado checado (fundo/borda do box) */
.hair-checklist .box input[type="checkbox"]:checked{
  border-color: var(--check);
  background: color-mix(in srgb, var(--check) 25%, transparent);
}

/* Texto + risco só no conteúdo */
.hair-checklist .box .txt{
  color: var(--text);
  display: inline-block;         /* delimita largura do risco */
  position: relative;            /* base do risco */
}
.hair-checklist .box .txt::after{
  content:"";
  position:absolute;
  left: 0;
  top: 0.72em;                   /* atravessa o miolo do texto */
  height: 2px;
  width: 0;                      /* anima 0 → 100% */
  background: var(--strike-idle);
  border-radius: 2px;
  opacity: 0;
}
.hair-checklist .box input[type="checkbox"]:checked ~ .txt{
  color: #c5c5c5;                /* “desabilitado” suave */
}
.hair-checklist .box input[type="checkbox"]:checked ~ .txt::after{
  background: var(--strike-checked);
  animation: hc-slice-text .35s ease forwards;
}

/* Faíscas: centro do checkbox (considera padding do card) */
.hair-checklist .box .spark{
  position: absolute;
  width: 4px; height: 4px;
  border-radius: 50%;
  left: calc(var(--card-pad) + var(--cb-size) / 2);
  top:  calc(var(--card-pad) + var(--cb-size) / 2);
  transform: translate(-50%, -50%);
  opacity: 0;
  pointer-events: none;
}
.hair-checklist .box input[type="checkbox"]:checked ~ .spark{
  animation: hc-firework .45s ease forwards .05s;
}

/* Foco acessível */
.hair-checklist .box input[type="checkbox"]::file-selector-button{ display:none; } /* só por segurança */
.hair-checklist .box input[type="checkbox"]:focus-visible{
  outline: 2px solid #fff;
  outline-offset: 3px;
}

/* ===== Animações (namespaced) ===== */
@keyframes hc-check-01{
  0%   { width: 0; transform: translate(-50%, -50%) rotate(0deg); }
  50%  { width: 0; transform: translate(-50%, -50%) rotate(0deg); }
  51%  { width: 0; transform: translate(-50%, -50%) rotate(45deg); }
  100% { width: var(--tick-short); transform: translate(-50%, -50%) rotate(45deg); }
}
@keyframes hc-check-02{
  0%   { width: 0; transform: translate(-50%, -50%) rotate(0deg); }
  50%  { width: 0; transform: translate(-50%, -50%) rotate(0deg); }
  51%  { width: 0; transform: translate(-50%, -50%) rotate(-45deg); }
  100% { width: var(--tick-long); transform: translate(-50%, -50%) rotate(-45deg); }
}
@keyframes hc-slice-text{
  0%   { width: 0;    opacity: 0; }
  60%  { width: 100%; opacity: .95; }
  100% { width: 100%; opacity: .30; }
}
@keyframes hc-firework{
  0%{
    opacity: 1;
    box-shadow:
      0   0   0 0 var(--spark),
      0   0   0 0 var(--spark),
      0   0   0 0 var(--spark),
      0   0   0 0 var(--spark),
      0   0   0 0 var(--spark),
      0   0   0 0 var(--spark);
  }
  100%{
    opacity: 0;
    box-shadow:
      0  -18px 0 0 var(--spark),
      16px -10px 0 0 var(--spark),
      16px  10px 0 0 var(--spark),
      0   18px 0 0 var(--spark),
      -16px 10px 0 0 var(--spark),
      -16px -10px 0 0 var(--spark);
  }
}

/* ===== Mobile: desabilita o slice no texto ===== */
@media (max-width: 767px){
  .hair-checklist .box input[type="checkbox"]:checked ~ .txt::after{
    animation: none !important;
    width: 0 !important;
    opacity: 0 !important;
  }
}